{"version":3,"file":"main-1e4860cfcc0d72821764.js","mappings":"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","sources":["webpack://webpack-boilerplate/webpack/runtime/chunk loaded","webpack://webpack-boilerplate/./src/utils.js","webpack://webpack-boilerplate/./src/components/Header/Header.js","webpack://webpack-boilerplate/./src/components/Button/Button.js","webpack://webpack-boilerplate/./src/views/Settings/Settings.js","webpack://webpack-boilerplate/./src/components/Settings/Settings.js","webpack://webpack-boilerplate/./src/components/Settings/settings.html","webpack://webpack-boilerplate/./src/components/Card/Card.js","webpack://webpack-boilerplate/./src/views/Mesh/Mesh.js","webpack://webpack-boilerplate/./src/views/Welcome/Welcome.js","webpack://webpack-boilerplate/./src/components/Welcome/Welcome.js","webpack://webpack-boilerplate/./src/components/Welcome/welcome.html","webpack://webpack-boilerplate/./src/components/Timer/Timer.js","webpack://webpack-boilerplate/./src/components/Modal/Modal.js","webpack://webpack-boilerplate/./src/views/ArtistQuiz/ArtistQuiz.js","webpack://webpack-boilerplate/./src/views/PictureQuiz/PictureQuiz.js","webpack://webpack-boilerplate/./src/constants.js","webpack://webpack-boilerplate/./src/game.js","webpack://webpack-boilerplate/./src/index.js","webpack://webpack-boilerplate/./src/components/Footer/Footer.js","webpack://webpack-boilerplate/./src/components/Footer/footer.html","webpack://webpack-boilerplate/webpack/bootstrap","webpack://webpack-boilerplate/webpack/runtime/compat get default export","webpack://webpack-boilerplate/webpack/runtime/define property getters","webpack://webpack-boilerplate/webpack/runtime/hasOwnProperty shorthand","webpack://webpack-boilerplate/webpack/runtime/jsonp chunk loading","webpack://webpack-boilerplate/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","const createFragmentFromString = (str) => {\n  const template = document.createElement('template');\n  template.innerHTML = str;\n  return template.content;\n};\n\nconst parseRequestURL = () => {\n  // eslint-disable-next-line no-restricted-globals\n  const url = location.hash.slice(1).toLowerCase() || '/';\n\n  const r = url.split('/');\n\n  return {\n    resource: r[1] || null,\n    id: r[2] || null,\n    verb: r[3] || null,\n  };\n};\n\nconst getRoute = () => {\n  const request = parseRequestURL();\n\n  return (\n    (request.resource ? `#/${request.resource}` : '#/')\n    + (request.id ? '/:id' : '')\n    + (request.verb ? `/${request.verb}` : '')\n  );\n};\n\nconst shuffleArray = (array) => {\n  const result = Array.from(array);\n\n  for (let i = result.length - 1; i > 0; i -= 1) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = result[i];\n    result[i] = result[j];\n    result[j] = temp;\n  }\n\n  return result;\n};\n\nconst imagesInfoGetter = () => {\n  let imagesInfoCache = null;\n  return async () => {\n    if (!imagesInfoCache) {\n      const resp = await fetch('/assets/json/images.json');\n      const json = await resp.json();\n      imagesInfoCache = json;\n    }\n    return imagesInfoCache;\n  };\n};\n\nconst getSecondsCounter = () => {\n  const observers = [];\n  const loop = (previousUnixTime = 0) => {\n    const currentTime = new Date().getTime();\n    observers.forEach((observer) => {\n      observer(currentTime - previousUnixTime);\n    });\n    setTimeout(loop.bind(null, currentTime), 1000);\n  };\n  loop();\n  return {\n    addObserver: (observer) => observers.push(observer),\n    removeObserver: (observer) => observers.splice(observers.indexOf(observer), 1),\n    clear: () => {\n      observers.length = 0;\n    },\n  };\n};\n\nconst getImagesInfo = imagesInfoGetter();\n\nexport default {\n  createFragmentFromString,\n  parseRequestURL,\n  getRoute,\n  getImagesInfo,\n  shuffleArray,\n  getSecondsCounter,\n};\n","import '@/components/Header/style.scss';\n\nconst HeaderComponent = (props) => {\n  const getNavPart = (navig, isAlternative) => {\n    const nav = document.createElement('nav');\n    nav.classList.add('app-nav');\n\n    if (isAlternative) {\n      const button = document.createElement('button');\n      button.innerText = navig.title;\n      button.classList.add('back');\n      button.addEventListener('click', () => {\n        window.history.back();\n      });\n      nav.append(button);\n    } else {\n      const a = document.createElement('a');\n      a.classList.add('app-logo');\n      a.href = '#';\n\n      const img = document.createElement('img');\n      img.src = './assets/svg/app-logo.svg';\n      img.alt = '';\n\n      a.append(img);\n\n      const ul = document.createElement('ul');\n      ul.classList.add('nav-list');\n\n      navig.forEach((navPage) => {\n        const li = document.createElement('li');\n        li.classList.add('nav-item');\n        li.innerText = navPage.title;\n        if (navPage.active) {\n          li.classList.add('active');\n        }\n        li.addEventListener('click', () => {\n          window.location = navPage.href;\n        });\n        ul.append(li);\n      });\n\n      nav.append(a);\n      nav.append(ul);\n    }\n    return nav;\n  };\n\n  const getButtonPart = (settingsHref, isAlternative) => {\n    const button = document.createElement('button');\n    button.classList.add('app-settings');\n    if (isAlternative) {\n      button.classList.add('active');\n    }\n    button.addEventListener('click', () => {\n      if (isAlternative) {\n        window.history.back();\n      } else {\n        window.location = settingsHref;\n      }\n    });\n    return button;\n  };\n\n  const header = document.createElement('header');\n\n  const isAlternativeHeader = props.nav && !Array.isArray(props.nav);\n\n  if (props.nav) {\n    header.append(getNavPart(props.nav, isAlternativeHeader));\n  }\n  header.append(getButtonPart(props.settingsHref, isAlternativeHeader));\n\n  return header;\n};\n\nexport default HeaderComponent;\n","import '@/components/Button/style.scss';\n\nconst Button = (text, width, height, onClick) => {\n  const w = width || 'auto';\n  const h = height || 'auto';\n\n  const button = document.createElement('button');\n  button.style.width = w;\n  button.style.height = h;\n  button.classList.add('button');\n  button.innerText = text;\n  if (onClick && typeof onClick === 'function') {\n    button.addEventListener('click', onClick);\n  }\n  return button;\n};\n\nexport default Button;\n","import SettingsComponent from '@/components/Settings/Settings';\n\nconst SettingsView = (settingsManager) => {\n  const container = document.createDocumentFragment();\n\n  container.append(SettingsComponent(settingsManager));\n\n  return container;\n};\n\nexport default SettingsView;\n","import '@/components/Settings/style.scss';\nimport SettingsHTML from '@/components/Settings/settings.html';\nimport Button from '@/components/Button/Button';\nimport Utils from '@/utils';\n\nconst SettingsComponent = (settingsManager) => {\n  const fragment = Utils.createFragmentFromString(SettingsHTML);\n\n  const buttonsContainer = fragment.querySelector('.buttons-container');\n  buttonsContainer.append(Button('Default', '240px', '60px'));\n  buttonsContainer.append(Button('Save', '240px', '60px'));\n\n  const volumePicker = fragment.querySelector('#volume');\n  const setVolumeGrad = () => {\n    const style = `linear-gradient(\n      to right,\n      #ffbca2 0%,\n      #ffbca2 ${volumePicker.value}%,\n      #a4a4a4 ${volumePicker.value}%,\n      #a4a4a4 100%\n      )`;\n    volumePicker.style.background = style;\n  };\n\n  volumePicker.value = settingsManager.getVolume();\n  setVolumeGrad();\n\n  volumePicker.addEventListener('input', () => {\n    setVolumeGrad();\n    settingsManager.setVolume(volumePicker.value);\n  });\n\n  [\n    ...buttonsContainer.children,\n    ...fragment.querySelectorAll('.answer-time-container button'),\n    fragment.querySelector('.slider.round'),\n    volumePicker,\n  ].forEach((elem) => {\n    elem.addEventListener('mouseup', () => settingsManager.playSound('/assets/audio/click.wav'));\n  });\n\n  return fragment;\n};\n\nexport default SettingsComponent;\n","// Module\nvar code = \"<div class=\\\"settings\\\"> <div class=\\\"volume-container\\\"> <h2>Volume</h2> <div class=\\\"controls\\\"> <input type=\\\"range\\\" class=\\\"volume-picker\\\" id=\\\"volume\\\"/> <div class=\\\"buttons\\\"> <button class=\\\"quiet\\\"></button> <button class=\\\"loud\\\"></button> </div> </div> </div> <div class=\\\"time-container\\\"> <h2>Time game</h2> <label for=\\\"time-game\\\">Off</label> <label class=\\\"switch\\\"> <input type=\\\"checkbox\\\" id=\\\"time-game\\\"/> <span class=\\\"slider round\\\"></span> </label> </div> <div class=\\\"answer-time-container\\\"> <h2>Time to answer</h2> <div class=\\\"controls\\\"> <button onclick=\\\"this.nextElementSibling.stepDown()\\\">-</button> <input disabled=\\\"disabled\\\" type=\\\"number\\\" id=\\\"answ-time\\\" min=\\\"0\\\" max=\\\"50\\\" onkeydown=\\\"return!1\\\" value=\\\"20\\\"/> <button onclick=\\\"this.previousElementSibling.stepUp()\\\">+</button> </div> </div> <div class=\\\"buttons-container\\\"> </div> </div> \";\n// Exports\nexport default code;","import '@/components/Card/style.scss';\n\nconst RetryButton = (text, href) => {\n  const inner = document.createElement('div');\n  inner.classList.add('inner');\n  inner.innerText = text;\n\n  const button = document.createElement('button');\n  button.classList.add('retry-button');\n\n  button.addEventListener('click', (e) => {\n    e.stopPropagation();\n    window.location = href;\n  });\n\n  button.append(inner);\n  return button;\n};\n\nconst Desc = (desc) => {\n  const container = document.createElement('div');\n  container.classList.add('description');\n\n  if (desc && desc.title) {\n    const titleElem = document.createElement('span');\n    titleElem.classList.add('title');\n    titleElem.innerText = desc.title;\n    container.append(titleElem);\n  }\n\n  if (desc && desc.text) {\n    const textElem = document.createElement('span');\n    textElem.classList.add('text');\n    textElem.innerText = desc.text;\n    container.append(textElem);\n  }\n\n  return container;\n};\n\nconst getCaptionPart = (caption) => {\n  const captionContainer = document.createElement('div');\n  captionContainer.classList.add('caption');\n\n  if (caption && caption.name) {\n    const nameTextElem = document.createElement('span');\n    nameTextElem.classList.add('name');\n    nameTextElem.innerText = caption.name;\n    captionContainer.append(nameTextElem);\n  }\n\n  if (caption && caption.value) {\n    const valueTextElem = document.createElement('span');\n    valueTextElem.classList.add('value');\n    valueTextElem.innerText = caption.value;\n    captionContainer.append(valueTextElem);\n  }\n\n  return captionContainer;\n};\n\nconst getContentPart = (image, popup, href) => {\n  const getImagePart = () => {\n    const imageContainer = document.createElement('div');\n    imageContainer.classList.add('image');\n    imageContainer.style.backgroundImage = `url(${image.url})`;\n    if (image.shouldFade) {\n      imageContainer.classList.add('fade');\n    }\n\n    if ('highlightAnswerAs' in image) {\n      imageContainer.addEventListener('click', () => {\n        imageContainer.innerHTML = '';\n        const filter = document.createElement('div');\n        filter.classList.add('filter');\n        filter.classList.add(image.highlightAnswerAs ? 'right' : 'not-right');\n        imageContainer.append(filter);\n      });\n    }\n\n    return imageContainer;\n  };\n\n  const getPopupPart = (root) => {\n    const popupContainer = document.createElement('div');\n    popupContainer.classList.add('popup');\n    const toggleActive = () => popupContainer.classList.toggle('active');\n\n    if (popup.desc) {\n      if (popup.isActive) {\n        popupContainer.classList.add('active');\n      }\n      if ('truthSign' in popup.desc) {\n        popupContainer.classList.add('guess-result');\n        popupContainer.classList.add(popup.desc.truthSign ? 'right' : 'not-right');\n      } else {\n        root.addEventListener('click', toggleActive);\n        popupContainer.append(Desc(popup.desc));\n      }\n    } else {\n      popupContainer.classList.add('retry-btn');\n      popupContainer.append(RetryButton('Play again', popup.href));\n      root.addEventListener('mouseenter', toggleActive);\n      root.addEventListener('mouseleave', toggleActive);\n    }\n\n    return popupContainer;\n  };\n\n  const contentContainer = document.createElement('div');\n  contentContainer.classList.add('content');\n\n  contentContainer.append(getImagePart());\n\n  if (popup) {\n    contentContainer.append(getPopupPart(contentContainer));\n  }\n\n  if (href) {\n    contentContainer.addEventListener('click', () => {\n      window.location = href;\n    });\n  }\n\n  return contentContainer;\n};\n\nconst Card = ({\n  caption, image, popup, href,\n}) => {\n  const cardContainer = document.createElement('div');\n  cardContainer.classList.add('card');\n\n  if (caption) {\n    cardContainer.append(getCaptionPart(caption));\n  }\n\n  cardContainer.append(getContentPart(image, popup, href));\n\n  return cardContainer;\n};\n\nexport default Card;\n","import '@/views/Mesh/style.scss';\nimport Card from '@/components/Card/Card';\n\nconst MeshView = (cardsData, isScore = false) => {\n  const mesh = document.createElement('div');\n  mesh.classList.add('mesh');\n\n  if (isScore) {\n    mesh.classList.add('five-cells');\n  }\n\n  cardsData.forEach((card) => {\n    mesh.append(Card(card));\n  });\n\n  return mesh;\n};\n\nexport default MeshView;\n","import WelcomeComponent from '@/components/Welcome/Welcome';\n\nconst WelcomeView = (urls) => {\n  const container = document.createDocumentFragment();\n\n  container.append(WelcomeComponent(urls));\n\n  return container;\n};\n\nexport default WelcomeView;\n","import '@/components/Welcome/style.scss';\nimport WelcomeHTML from '@/components/Welcome/welcome.html';\nimport Button from '@/components/Button/Button';\nimport Utils from '@/utils';\n\nconst WelcomeComponent = (urls) => {\n  const fragment = Utils.createFragmentFromString(WelcomeHTML);\n  const bg = fragment.querySelector('.button-group');\n  bg.append(Button('Artist quiz', '240px', '60px', () => {\n    location = urls.artistQuiz;\n  }));\n  bg.append(Button('Pictures quiz', '240px', '60px', () => {\n    location = urls.pictureQuiz;\n  }));\n  return fragment;\n};\n\nexport default WelcomeComponent;\n","// Module\nvar code = \"<div class=\\\"welcome\\\"> <h1>Art Quiz</h1> <div class=\\\"button-group\\\"> </div> </div>\";\n// Exports\nexport default code;","import '@/components/Timer/style.scss';\n\nconst msInSec = 1000;\nconst maxPercentage = 100;\n\nconst Timer = (sec, secondsCounter, onClose, onTimeEnds) => {\n  let timeMs = sec * msInSec;\n  let modalOpened = false;\n\n  const quitButton = document.createElement('button');\n  quitButton.classList.add('quit-btn');\n  quitButton.addEventListener('click', () => {\n    modalOpened = true;\n    onClose((closed) => {\n      if (!closed) {\n        modalOpened = false;\n      }\n    });\n  });\n\n  const timeBar = document.createElement('input');\n  timeBar.type = 'range';\n  timeBar.classList.add('time-bar');\n  timeBar.value = 0;\n\n  const timeText = document.createElement('span');\n  timeText.classList.add('time-text');\n  timeText.innerText = sec;\n\n  const timerContainer = document.createElement('div');\n  timerContainer.classList.add('timer-container');\n  timerContainer.append(quitButton);\n  timerContainer.append(timeBar);\n  timerContainer.append(timeText);\n\n  if (secondsCounter) {\n    secondsCounter.addObserver(function observer(tickMilliseconds) {\n      if (!modalOpened && timeMs >= 0) {\n        timeMs -= tickMilliseconds;\n\n        const givenTimeMs = sec * msInSec;\n        const spendedTime = Math.abs(timeMs - givenTimeMs);\n        const progress = Math.round((spendedTime / givenTimeMs) * maxPercentage);\n\n        timeText.innerText = Math.round(timeMs / msInSec);\n        timeBar.value = progress;\n        const style = `linear-gradient(\n        to right,\n        #ffbca2 0%,\n        #ffbca2 ${progress}%,\n        #a4a4a4 ${progress}%,\n        #a4a4a4 100%\n        )`;\n        timeBar.style.background = style;\n      }\n      if (timeMs <= 0) {\n        secondsCounter.removeObserver(observer);\n        onTimeEnds();\n      }\n    });\n  }\n\n  return timerContainer;\n};\n\nexport default Timer;\n","import '@/components/Modal/style.scss';\nimport Card from '@/components/Card/Card';\nimport Button from '../Button/Button';\n\nconst Modal = (buttons, imgInfo, caption) => {\n  const getImagePart = () => {\n    const imageContainer = document.createElement('div');\n    imageContainer.classList.add('image-container');\n\n    if (imgInfo.type === 'stars') {\n      imageContainer.classList.add('symbol');\n      imageContainer.classList.add('stars');\n    } else if (imgInfo.type === 'cube') {\n      imageContainer.classList.add('symbol');\n      imageContainer.classList.add('cube');\n    } else {\n      imageContainer.append(Card(imgInfo));\n    }\n\n    return imageContainer;\n  };\n\n  const getTextPart = (text) => {\n    const textContainer = document.createElement('div');\n    textContainer.classList.add('text');\n\n    if (text && text.big) {\n      const bigTextElem = document.createElement('span');\n      bigTextElem.classList.add('big');\n      bigTextElem.innerText = text.big;\n      textContainer.append(bigTextElem);\n    }\n\n    if (text && text.middle) {\n      const middleTextElem = document.createElement('span');\n      middleTextElem.classList.add('middle');\n      middleTextElem.innerText = text.middle;\n      textContainer.append(middleTextElem);\n    }\n\n    if (text && text.small) {\n      const smallTextElem = document.createElement('span');\n      smallTextElem.classList.add('small');\n      smallTextElem.innerText = text.small;\n      textContainer.append(smallTextElem);\n    }\n\n    if (text && text.tiny) {\n      const tinyTextElem = document.createElement('span');\n      tinyTextElem.classList.add('tiny');\n      tinyTextElem.innerText = text.tiny;\n      textContainer.append(tinyTextElem);\n    }\n\n    return textContainer;\n  };\n\n  const getButtonsPart = () => {\n    const buttonsContainer = document.createElement('div');\n    buttonsContainer.classList.add('buttons-container');\n\n    buttons.forEach((button) => {\n      const btn = Button(button.title, 'auto', '60px');\n      btn.classList.add('black');\n      btn.addEventListener('click', button.callback);\n      buttonsContainer.append(btn);\n    });\n\n    return buttonsContainer;\n  };\n\n  const modalContainer = document.createElement('div');\n  modalContainer.classList.add('modal-container');\n  modalContainer.classList.add('active');\n\n  const modalWindow = document.createElement('div');\n  modalWindow.classList.add('modal-window');\n\n  if (imgInfo) {\n    if (imgInfo.type === 'stars') {\n      modalWindow.classList.add('symbol');\n      modalWindow.classList.add('stars');\n    } else if (imgInfo.type === 'cube') {\n      modalWindow.classList.add('symbol');\n      modalWindow.classList.add('cube');\n    }\n    modalWindow.append(getImagePart());\n  }\n  if (caption) {\n    modalWindow.append(\n      getTextPart({\n        tiny: caption.tiny, small: caption.small, middle: caption.middle, big: caption.big,\n      }),\n    );\n  }\n  modalWindow.append(getButtonsPart());\n\n  modalContainer.append(modalWindow);\n  return modalContainer;\n};\n\nexport default Modal;\n","import Timer from '@/components/Timer/Timer';\nimport '@/views/ArtistQuiz/style.scss';\nimport Card from '@/components/Card/Card';\nimport Button from '@/components/Button/Button';\nimport Modal from '@/components/Modal/Modal';\n\nconst ArtistQuizView = (gameRoot, questions, secondsCounter, onQuizFinished, timeToAnswer) => {\n  let previousMarkup = { remove: () => {}, before: (markup) => gameRoot.append(markup) };\n  const questionsQueue = [...questions].reverse();\n  const guessedQuestionHrefs = [];\n\n  const getMarkup = (question, onClose, onAnswer) => {\n    let answerClicked = false;\n\n    const artistQuizContainer = document.createElement('div');\n    artistQuizContainer.classList.add('artist-quiz-container');\n\n    const getGamePart = () => {\n      const getQuestionPart = (text) => {\n        const questionText = document.createElement('span');\n        questionText.classList.add('question');\n        questionText.innerText = text;\n        return questionText;\n      };\n\n      const getMasterpicePart = () => {\n        const masterpiceContainer = document.createElement('div');\n        masterpiceContainer.classList.add('masterpice');\n        masterpiceContainer.append(\n          Card({\n            caption: null,\n            image: {\n              url: question.href,\n              shouldFade: false,\n            },\n            popup: null,\n            href: null,\n          }),\n        );\n\n        return masterpiceContainer;\n      };\n\n      const getButtonsPart = () => {\n        const buttonsContainer = document.createElement('div');\n        buttonsContainer.classList.add('buttons-container');\n        question.variants.forEach((variant) => {\n          buttonsContainer.append(\n            Button(variant, 'auto', '60px', () => {\n              answerClicked = true;\n              onAnswer(artistQuizContainer, variant);\n            }),\n          );\n        });\n\n        return buttonsContainer;\n      };\n\n      const gameContainer = document.createElement('div');\n      gameContainer.classList.add('game');\n\n      gameContainer.append(getQuestionPart('Who is the author of this picture?'));\n      gameContainer.append(getMasterpicePart());\n      gameContainer.append(getButtonsPart());\n\n      return gameContainer;\n    };\n\n    const boundOnClose = onClose.bind(null, artistQuizContainer);\n    const boundOnTimeEnds = () => {\n      if (!answerClicked) {\n        onAnswer(artistQuizContainer);\n      }\n    };\n\n    if (timeToAnswer) {\n      artistQuizContainer.append(\n        Timer(timeToAnswer, secondsCounter, boundOnClose, boundOnTimeEnds),\n      );\n    } else {\n      artistQuizContainer.append(Timer('∞', null, boundOnClose, boundOnTimeEnds));\n    }\n\n    artistQuizContainer.append(getGamePart());\n    return artistQuizContainer;\n  };\n\n  const displayNextQuestion = () => {\n    const currentQuestion = questionsQueue.pop();\n\n    if (currentQuestion) {\n      const onAnswer = (root, gamerAnswer) => {\n        if (gamerAnswer === currentQuestion.author) {\n          guessedQuestionHrefs.push(currentQuestion.href);\n        }\n        const modal = Modal(\n          [\n            {\n              title: 'Next',\n              callback: () => {\n                modal.remove();\n                displayNextQuestion();\n              },\n            },\n          ],\n          {\n            type: null,\n            caption: null,\n            image: {\n              url: currentQuestion.href,\n              shouldFade: false,\n              highlightAnswerAs: gamerAnswer === currentQuestion.author,\n            },\n            popup: {\n              isActive: true,\n              desc: {\n                truthSign: gamerAnswer === currentQuestion.author,\n              },\n            },\n            href: null,\n          },\n          {\n            middle: currentQuestion.name,\n            tiny: `${currentQuestion.author}, ${currentQuestion.year}`,\n          },\n        );\n        root.append(modal);\n      };\n\n      const closeGame = () => {\n        window.history.back();\n      };\n\n      const onClose = (root, promptResult) => {\n        const modal = Modal(\n          [\n            {\n              title: 'Cancel',\n              callback: () => {\n                modal.remove();\n                promptResult(false);\n              },\n            },\n            {\n              title: 'Yes',\n              callback: () => {\n                promptResult(true);\n                closeGame();\n              },\n            },\n          ],\n          null,\n          {\n            middle: 'Do you really want to quit the game?',\n          },\n        );\n        root.append(modal);\n      };\n\n      const markup = getMarkup(currentQuestion, onClose, onAnswer);\n      previousMarkup.before(markup);\n      previousMarkup.remove();\n      previousMarkup = markup;\n    } else {\n      const modal = Modal(\n        [\n          {\n            title: 'Home',\n            callback: () => {\n              modal.remove();\n              window.location = '/#';\n            },\n          },\n          {\n            title: 'Categories',\n            callback: () => {\n              modal.remove();\n              window.history.back();\n            },\n          },\n        ],\n        {\n          type: 'cube',\n          caption: null,\n          image: null,\n          popup: null,\n          href: null,\n        },\n        {\n          middle: 'Congratulations!',\n          big: `${guessedQuestionHrefs.length}/${questions.length}`,\n        },\n      );\n      gameRoot.append(modal);\n      onQuizFinished(guessedQuestionHrefs);\n    }\n  };\n\n  displayNextQuestion();\n};\n\nexport default ArtistQuizView;\n","import Timer from '@/components/Timer/Timer';\nimport '@/views/PictureQuiz/style.scss';\nimport Card from '@/components/Card/Card';\nimport Modal from '@/components/Modal/Modal';\n\nconst PictureQuizView = (gameRoot, questions, secondsCounter, onQuizFinished, timeToAnswer) => {\n  let previousMarkup = { remove: () => {}, before: (markup) => gameRoot.append(markup) };\n  const questionsQueue = [...questions].reverse();\n  const guessedQuestionHrefs = [];\n\n  const getMarkup = (question, onClose, onAnswer) => {\n    let answerClicked = false;\n\n    const pictureQuizContainer = document.createElement('div');\n    pictureQuizContainer.classList.add('picture-quiz-container');\n\n    const getGamePart = () => {\n      const getQuestionPart = () => {\n        const questionText = document.createElement('span');\n        questionText.classList.add('question');\n        questionText.innerText = `Which is ${question.author} picture?`;\n        return questionText;\n      };\n\n      const getMasterpicePart = () => {\n        const masterpiceContainer = document.createElement('div');\n        masterpiceContainer.classList.add('masterpice-container');\n        question.variants.forEach((variant) => {\n          const masterpice = Card({\n            caption: null,\n            image: {\n              url: variant,\n              shouldFade: false,\n            },\n            popup: null,\n            href: null,\n          });\n          masterpice.addEventListener('click', () => {\n            answerClicked = true;\n            onAnswer(pictureQuizContainer, variant);\n          });\n          masterpiceContainer.append(masterpice);\n        });\n\n        return masterpiceContainer;\n      };\n\n      const gameContainer = document.createElement('div');\n      gameContainer.classList.add('game');\n\n      gameContainer.append(getQuestionPart('Which is Edvard Munch picture?'));\n      gameContainer.append(getMasterpicePart());\n\n      return gameContainer;\n    };\n\n    const boundOnClose = onClose.bind(null, pictureQuizContainer);\n    const boundOnTimeEnds = () => {\n      if (!answerClicked) {\n        onAnswer(pictureQuizContainer);\n      }\n    };\n\n    if (timeToAnswer) {\n      pictureQuizContainer.append(\n        Timer(timeToAnswer, secondsCounter, boundOnClose, boundOnTimeEnds),\n      );\n    } else {\n      pictureQuizContainer.append(Timer('∞', null, boundOnClose, boundOnTimeEnds));\n    }\n\n    pictureQuizContainer.append(getGamePart());\n\n    return pictureQuizContainer;\n  };\n\n  const displayNextQuestion = () => {\n    const currentQuestion = questionsQueue.pop();\n\n    if (currentQuestion) {\n      const onAnswer = (root, gamerAnswer) => {\n        if (gamerAnswer === currentQuestion.href) {\n          guessedQuestionHrefs.push(currentQuestion.href);\n        }\n        const modal = Modal(\n          [\n            {\n              title: 'Next',\n              callback: () => {\n                modal.remove();\n                displayNextQuestion();\n              },\n            },\n          ],\n          {\n            type: null,\n            caption: null,\n            image: {\n              url: currentQuestion.href,\n              shouldFade: false,\n              highlightAnswerAs: gamerAnswer === currentQuestion.href,\n            },\n            popup: {\n              isActive: true,\n              desc: {\n                truthSign: gamerAnswer === currentQuestion.href,\n              },\n            },\n            href: null,\n          },\n          {\n            middle: currentQuestion.name,\n            tiny: `${currentQuestion.author}, ${currentQuestion.year}`,\n          },\n        );\n        root.append(modal);\n      };\n\n      const closeGame = () => {\n        window.history.back();\n      };\n\n      const onClose = (root, promptResult) => {\n        const modal = Modal(\n          [\n            {\n              title: 'Cancel',\n              callback: () => {\n                modal.remove();\n                promptResult(false);\n              },\n            },\n            {\n              title: 'Yes',\n              callback: () => {\n                promptResult(true);\n                closeGame();\n              },\n            },\n          ],\n          null,\n          {\n            middle: 'Do you really want to quit the game?',\n          },\n        );\n        root.append(modal);\n      };\n\n      const markup = getMarkup(\n        currentQuestion,\n        onClose,\n        onAnswer,\n      );\n      previousMarkup.before(markup);\n      previousMarkup.remove();\n      previousMarkup = markup;\n    } else {\n      const modal = Modal(\n        [\n          {\n            title: 'Home',\n            callback: () => {\n              modal.remove();\n              window.location = '/#';\n            },\n          },\n          {\n            title: 'Categories',\n            callback: () => {\n              modal.remove();\n              window.history.back();\n            },\n          },\n        ],\n        {\n          type: 'cube',\n          caption: null,\n          image: null,\n          popup: null,\n          href: null,\n        },\n        {\n          middle: 'Congratulations!',\n          big: `${guessedQuestionHrefs.length}/${questions.length}`,\n        },\n      );\n      gameRoot.append(modal);\n      onQuizFinished(guessedQuestionHrefs);\n    }\n  };\n\n  displayNextQuestion();\n};\n\nexport default PictureQuizView;\n","export const QUIZ_CATEGORIES_AMOUNT = 12; // max 12 with current dataset\nexport const QUIZ_QUESTIONS_AMOUNT = 10; // max 10 with current dataset\nexport const ARTIST_QUIZ = 'artist_quiz';\nexport const PICTURE_QUIZ = 'picture_quiz';\nexport const DEFAULT_VOLUME = 35;\nexport const DEFAULT_TIME_TO_ANSWER = 7;\n","import Utils from '@/utils';\nimport {\n  QUIZ_CATEGORIES_AMOUNT,\n  QUIZ_QUESTIONS_AMOUNT,\n  ARTIST_QUIZ,\n  DEFAULT_VOLUME,\n  DEFAULT_TIME_TO_ANSWER,\n} from '@/constants';\n\nconst getImagePathById = (id) => `/assets/img/${id}full.jpg`;\n\nconst getAnswerVariants = (answersArray, correctAnswer) => {\n  const values = new Set([correctAnswer]);\n  do {\n    const rnd = Math.floor(Math.random() * answersArray.length);\n    values.add(answersArray[rnd]);\n  } while (values.size !== 4);\n  return Utils.shuffleArray(Array.from(values));\n};\n\nconst separateData = (rawImagesInfo) => {\n  const authorsSet = new Set();\n  const imageHrefs = [];\n\n  const _ = rawImagesInfo.map((imgInfo) => {\n    const imageHref = getImagePathById(imgInfo.imageNum);\n    imageHrefs.push(imageHref);\n    authorsSet.add(imgInfo.author);\n    return {\n      author: imgInfo.author,\n      name: imgInfo.name,\n      href: imageHref,\n      year: imgInfo.year,\n    };\n  });\n  const authors = Array.from(authorsSet);\n\n  const artistQuizImagesInfo = _;\n  const picturesQuizImagesInfo = artistQuizImagesInfo.splice(_.length / 2);\n\n  return {\n    artistQuizImagesInfo,\n    picturesQuizImagesInfo,\n    imageHrefs,\n    authors,\n  };\n};\n\nconst getGameManager = async () => {\n  const rawImagesInfo = await Utils.getImagesInfo();\n  const {\n    authors, imageHrefs, artistQuizImagesInfo, picturesQuizImagesInfo,\n  } = separateData(rawImagesInfo);\n\n  const getQuizQuestions = (game, categoryId) => {\n    const imagesInfo = game === ARTIST_QUIZ ? artistQuizImagesInfo : picturesQuizImagesInfo;\n\n    const begin = categoryId * QUIZ_QUESTIONS_AMOUNT;\n    const result = [];\n\n    for (let i = begin; i < begin + QUIZ_QUESTIONS_AMOUNT; i += 1) {\n      const imgInfo = imagesInfo[i];\n      const variants = game === ARTIST_QUIZ\n        ? getAnswerVariants(authors, imgInfo.author)\n        : getAnswerVariants(imageHrefs, imgInfo.href);\n\n      result.push({\n        ...imgInfo,\n        variants,\n        game,\n        categoryId,\n      });\n    }\n    return result;\n  };\n\n  const scoreManager = {\n    getScore: () => JSON.parse(localStorage.getItem('score')),\n    getCategoryScore: (game, categoryId) => {\n      const score = scoreManager.getScore();\n      const gameScore = score ? score[game] : null;\n      const categoryScore = gameScore ? gameScore[categoryId] : null;\n      return categoryScore;\n    },\n    saveScore: (game, category, guessedHrefs) => {\n      const score = scoreManager.getScore() || {};\n      if (!score[game]) {\n        score[game] = {};\n      }\n      score[game][category] = guessedHrefs;\n      localStorage.setItem('score', JSON.stringify(score));\n    },\n  };\n\n  const getCategories = (game) => {\n    const result = [];\n    const imgOffset = game === ARTIST_QUIZ ? 0 : QUIZ_CATEGORIES_AMOUNT;\n\n    for (let categoryId = 0; categoryId < QUIZ_CATEGORIES_AMOUNT; categoryId += 1) {\n      const categoryScore = scoreManager.getCategoryScore(game, categoryId);\n\n      const guessedPicturesAmount = categoryScore ? categoryScore.length : null;\n      const alreadyPlayed = guessedPicturesAmount !== null;\n\n      const playCategoryHref = `#/${game}/${categoryId}`;\n      const scoreCategoryHref = `#/${game}/${categoryId}/score`;\n\n      result.push({\n        caption: {\n          name: `Category ${categoryId}`,\n          ...(alreadyPlayed ? { value: `${guessedPicturesAmount}/${QUIZ_QUESTIONS_AMOUNT}` } : {}),\n        },\n        image: {\n          url: getImagePathById(categoryId + imgOffset),\n          shouldFade: !alreadyPlayed,\n        },\n        popup: alreadyPlayed ? { href: playCategoryHref } : false,\n        href: alreadyPlayed ? scoreCategoryHref : playCategoryHref,\n      });\n    }\n\n    return result;\n  };\n\n  const getQuizScore = (questions) => {\n    const categoryScore = scoreManager.getCategoryScore(questions[0].game, questions[0].categoryId);\n\n    return questions.map((question) => ({\n      caption: null,\n      image: {\n        url: question.href,\n        shouldFade: categoryScore == null || !categoryScore.includes(question.href),\n      },\n      popup: {\n        desc: {\n          title: question.name,\n          text: `${question.author}, ${question.year}`,\n        },\n      },\n      href: null,\n    }));\n  };\n\n  const settingsManager = {\n    setVolume: (volumePercentage) => {\n      const player = document.querySelector('#player');\n      const maximumPercentage = 100;\n      player.volume = volumePercentage / maximumPercentage;\n      localStorage.setItem('volume', volumePercentage);\n    },\n    getVolume: () => {\n      const volume = parseFloat(localStorage.getItem('volume'));\n      return Number.isNaN(volume) ? DEFAULT_VOLUME : volume;\n    },\n    playSound: (soundHref) => {\n      const player = document.querySelector('#player');\n      player.src = soundHref;\n      player.play();\n    },\n    changeGameTime: (volume) => {\n      console.log('changeGameTime', volume);\n    },\n    getGameTime: () => {\n      console.log('getGameTime');\n      return 10;\n    },\n  };\n\n  return {\n    getQuizQuestions,\n    getCategories,\n    getQuizScore,\n    scoreManager,\n    settingsManager,\n  };\n};\n\nexport default { getGameManager };\n","import '@/styles/style.scss';\n\nimport FooterComponent from '@/components/Footer/Footer';\nimport HeaderComponent from '@/components/Header/Header';\n\nimport SettingsView from '@/views/Settings/Settings';\nimport MeshView from '@/views/Mesh/Mesh';\nimport WelcomeView from '@/views/Welcome/Welcome';\nimport ArtistQuizView from '@/views/ArtistQuiz/ArtistQuiz';\nimport PictureQuizView from '@/views/PictureQuiz/PictureQuiz';\n\nimport Utils from '@/utils';\nimport Game from '@/game';\nimport { ARTIST_QUIZ, PICTURE_QUIZ } from '@/constants';\n\nconst Routes = {\n  Welcome: '#/',\n  Settings: '#/settings',\n\n  ArtistQuizCategories: `#/${ARTIST_QUIZ}`,\n  PictureQuizCategories: `#/${PICTURE_QUIZ}`,\n\n  ArtistQuizGame: `#/${ARTIST_QUIZ}/:id`,\n  PictureQuizGame: `#/${PICTURE_QUIZ}/:id`,\n\n  ArtistQuizScore: `#/${ARTIST_QUIZ}/:id/score`,\n  PictureQuizScore: `#/${PICTURE_QUIZ}/:id/score`,\n};\n\nconst gameManagerPromise = Game.getGameManager();\nconst secondsCounter = Utils.getSecondsCounter();\n\nconst router = async () => {\n  const gameManager = await gameManagerPromise;\n  secondsCounter.clear();\n\n  const route = Utils.getRoute();\n  const { resource: game, id: categoryId } = Utils.parseRequestURL();\n\n  const appContainer = document.querySelector('.app-container');\n  appContainer.classList.remove('welcome');\n  appContainer.classList.remove('reduced');\n  appContainer.innerHTML = '';\n\n  const defaultNavbar = {\n    nav: [\n      {\n        title: 'Home',\n        href: Routes.Welcome,\n        active: route === Routes.Welcome,\n      },\n      {\n        title: 'Artist quiz',\n        href: Routes.ArtistQuizCategories,\n        active: route === Routes.ArtistQuizCategories,\n      },\n      {\n        title: 'Picture quiz',\n        href: Routes.PictureQuizCategories,\n        active: route === Routes.PictureQuizCategories,\n      },\n    ],\n    settingsHref: Routes.Settings,\n  };\n\n  const settingsNavbar = {\n    nav: {\n      title: 'Settings',\n    },\n  };\n\n  const welcomeNavbar = {\n    settingsHref: Routes.Settings,\n  };\n\n  const quizQuestions = gameManager.getQuizQuestions(game, categoryId);\n\n  const onQuizFinished = (guessedHrefs) => {\n    gameManager.scoreManager.saveScore(game, categoryId, guessedHrefs);\n  };\n\n  switch (route) {\n    case Routes.Welcome: {\n      appContainer.classList.add('welcome');\n      appContainer.append(HeaderComponent(welcomeNavbar));\n      appContainer.append(\n        WelcomeView({\n          artistQuiz: Routes.ArtistQuizCategories,\n          pictureQuiz: Routes.PictureQuizCategories,\n        }),\n      );\n      break;\n    }\n    case Routes.Settings: {\n      appContainer.append(HeaderComponent(settingsNavbar));\n      appContainer.append(SettingsView(gameManager.settingsManager));\n      break;\n    }\n    case Routes.ArtistQuizCategories: {\n      appContainer.append(HeaderComponent(defaultNavbar));\n      appContainer.append(MeshView(gameManager.getCategories(game)));\n      break;\n    }\n    case Routes.PictureQuizCategories: {\n      appContainer.append(HeaderComponent(defaultNavbar));\n      appContainer.append(MeshView(gameManager.getCategories(game)));\n      break;\n    }\n    case Routes.ArtistQuizGame: {\n      appContainer.classList.add('reduced');\n      ArtistQuizView(\n        appContainer,\n        quizQuestions,\n        secondsCounter,\n        onQuizFinished,\n        gameManager.settingsManager.getGameTime(),\n      );\n      break;\n    }\n    case Routes.PictureQuizGame: {\n      appContainer.classList.add('reduced');\n      PictureQuizView(\n        appContainer,\n        quizQuestions,\n        secondsCounter,\n        onQuizFinished,\n        gameManager.settingsManager.getGameTime(),\n      );\n      break;\n    }\n    case Routes.ArtistQuizScore: {\n      appContainer.append(HeaderComponent(defaultNavbar));\n      appContainer.append(MeshView(gameManager.getQuizScore(quizQuestions), true));\n      break;\n    }\n    case Routes.PictureQuizScore: {\n      appContainer.append(HeaderComponent(defaultNavbar));\n      appContainer.append(MeshView(gameManager.getQuizScore(quizQuestions), true));\n      break;\n    }\n    default: {\n      window.location = Routes.Welcome;\n      break;\n    }\n  }\n\n  appContainer.append(FooterComponent(gameManager.settingsManager));\n};\n\nconst container = document.createElement('div');\ncontainer.classList.add('app-container');\n\nconst root = document.querySelector('#root');\nroot.append(container);\n\nwindow.addEventListener('hashchange', router);\nwindow.addEventListener('load', router);\n","import '@/components/Footer/style.scss';\nimport FooterHTML from '@/components/Footer/footer.html';\nimport Utils from '@/utils';\n\nconst FooterComponent = () => {\n  const fragment = Utils.createFragmentFromString(FooterHTML);\n\n  return fragment;\n};\n\nexport default FooterComponent;\n","// Module\nvar code = \"<footer> <a class=\\\"rs-logo\\\" href=\\\"https://rs.school/\\\"><img src=\\\"./assets/svg/rs_school_js.svg\\\" alt=\\\"\\\"/></a> <div class=\\\"copyright\\\"> <a href=\\\"https://github.com/livwvil\\\"><span class=\\\"author\\\">livwvil</span></a> <span class=\\\"year\\\">2021</span> </div> <audio id=\\\"player\\\" hidden></audio> </footer>\";\n// Exports\nexport default code;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkwebpack_boilerplate\"] = self[\"webpackChunkwebpack_boilerplate\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [335], () => (__webpack_require__(871)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","imagesInfoCache","parseRequestURL","r","location","hash","slice","toLowerCase","split","resource","id","verb","getImagesInfo","fetch","resp","json","createFragmentFromString","str","template","document","createElement","innerHTML","content","getRoute","request","shuffleArray","array","result","Array","from","i","length","j","Math","floor","random","temp","getSecondsCounter","observers","loop","previousUnixTime","currentTime","Date","getTime","forEach","observer","setTimeout","bind","addObserver","push","removeObserver","splice","indexOf","clear","props","settingsHref","isAlternative","button","header","isAlternativeHeader","nav","isArray","append","navig","classList","add","innerText","title","addEventListener","window","history","back","a","href","img","src","alt","ul","navPage","li","active","getNavPart","text","width","height","onClick","w","h","style","settingsManager","container","createDocumentFragment","fragment","Utils","buttonsContainer","querySelector","Button","volumePicker","setVolumeGrad","value","background","getVolume","setVolume","children","querySelectorAll","elem","playSound","SettingsComponent","caption","image","popup","cardContainer","captionContainer","name","nameTextElem","valueTextElem","getCaptionPart","imageContainer","contentContainer","backgroundImage","url","shouldFade","filter","highlightAnswerAs","root","popupContainer","toggleActive","toggle","desc","isActive","truthSign","titleElem","textElem","Desc","inner","e","stopPropagation","RetryButton","getPopupPart","getContentPart","cardsData","isScore","mesh","card","Card","urls","bg","artistQuiz","pictureQuiz","WelcomeComponent","msInSec","sec","secondsCounter","onClose","onTimeEnds","timeMs","modalOpened","quitButton","closed","timeBar","type","timeText","timerContainer","tickMilliseconds","givenTimeMs","spendedTime","abs","progress","round","buttons","imgInfo","modalContainer","modalWindow","textContainer","big","bigTextElem","middle","middleTextElem","small","smallTextElem","tiny","tinyTextElem","getTextPart","btn","callback","gameRoot","questions","onQuizFinished","timeToAnswer","previousMarkup","remove","before","markup","questionsQueue","reverse","guessedQuestionHrefs","displayNextQuestion","currentQuestion","pop","question","onAnswer","answerClicked","artistQuizContainer","questionText","masterpiceContainer","gameContainer","boundOnClose","promptResult","modal","Modal","boundOnTimeEnds","Timer","variants","variant","getMarkup","gamerAnswer","author","year","pictureQuizContainer","masterpice","ARTIST_QUIZ","PICTURE_QUIZ","getImagePathById","getAnswerVariants","answersArray","correctAnswer","values","Set","rnd","size","separateData","rawImagesInfo","authorsSet","imageHrefs","_","map","imageHref","imageNum","authors","artistQuizImagesInfo","picturesQuizImagesInfo","getGameManager","getQuizQuestions","game","categoryId","imagesInfo","begin","scoreManager","getScore","JSON","parse","localStorage","getItem","getCategoryScore","score","gameScore","saveScore","category","guessedHrefs","setItem","stringify","getCategories","imgOffset","categoryScore","guessedPicturesAmount","alreadyPlayed","playCategoryHref","scoreCategoryHref","getQuizScore","includes","volumePercentage","volume","parseFloat","Number","isNaN","soundHref","player","play","changeGameTime","console","log","getGameTime","Routes","Welcome","Settings","ArtistQuizCategories","PictureQuizCategories","ArtistQuizGame","PictureQuizGame","ArtistQuizScore","PictureQuizScore","gameManagerPromise","Game","router","gameManager","route","appContainer","defaultNavbar","settingsNavbar","welcomeNavbar","quizQuestions","HeaderComponent","WelcomeView","SettingsView","MeshView","ArtistQuizView","PictureQuizView","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","every","key","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}